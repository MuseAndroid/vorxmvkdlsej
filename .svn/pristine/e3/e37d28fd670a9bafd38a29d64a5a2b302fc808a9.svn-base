package kr.co.genexon.factFinder;

import android.annotation.SuppressLint;
import android.content.DialogInterface;
import android.graphics.Color;
import android.os.Build;
import android.os.Bundle;

import android.os.Handler;
import android.os.Message;
import android.support.annotation.Nullable;
import android.support.v7.app.AlertDialog;
import android.support.v7.app.AppCompatActivity;
import android.view.View;

import com.androidquery.AQuery;
import com.androidquery.callback.AjaxStatus;

import org.json.JSONException;
import org.json.JSONObject;

import java.util.HashMap;
import java.util.Map;

/**
 * Created by topgu on 2018-04-05.
 */

public class BaseActivity extends AppCompatActivity {

    protected static final String TAG = "FactFinder";

    private AQuery mAQuery = new AQuery(this);
    private SelectServerURL serverURL = new SelectServerURL();
    String baseURL = serverURL.getServerURL();

    @Override
    protected void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        View view = getWindow().getDecorView();
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
            if (view != null) {
                getWindow().setStatusBarColor(Color.parseColor("#3f62ba"));
            }
        } else if (Build.VERSION.SDK_INT >= 21) {
            getWindow().setStatusBarColor(Color.parseColor("#3f62ba"));
        } else {
            // 킷캣 이하버전 기본 상단바로
        /*SystemBarTintManager tintManager = new SystemBarTintManager(this);
        tintManager.setStatusBarTintEnabled(true);
        tintManager.setTintColor(Color.parseColor("#204182f7"));*/
        }

    }

    @Override
    protected void onDestroy() {
        super.onDestroy();
    }

    public void viewError1(String errString, String mb_id, String const_id, String cust_nm, String mobileNo, String err_gubun, String mobileCo) {
        Map<String, String> errParam = new HashMap<String, String>();
        errParam.put("MB_ID", mb_id);
        errParam.put("CONSULTANT_ID", const_id);
        errParam.put("CUSTOMER_NM", cust_nm);
        errParam.put("MOBILE_NO", mobileNo);
        errParam.put("ERR_GUBUN", err_gubun);
        errParam.put("DEVICE_GUBUN", "android");
        errParam.put("MOBILE_CO", mobileCo);
        errParam.put("ERR_MSG", errString);

        mAQuery.ajax(baseURL + "/insertErrorLog.ajax", errParam, JSONObject.class, this, "responseErrorMsg1");
    }

    public void responseErrorMsg1(String url, JSONObject json, AjaxStatus status) {

        if (json != null) {
            try {
                LogUtil.d(TAG, "리턴 결과 = " + json.toString());
                LogUtil.d(TAG, "상태값 확인 = " + status.toString());
                String result = json.getString("result");
                LogUtil.d(TAG, "결과값 = " + result);
                if (result.equals("OK")) {
//                    LogUtil.d(TAG, "에러메시지 전송 성공");
//                    LogUtil.d(TAG, "팝업 띄우기 위한 핸들러 동작 시작");
//                    Message msg = errHandler.obtainMessage(0);
//                    errHandler.sendMessage(msg);
                } else {
//                    LogUtil.d(TAG, "에러메시지 전송 실패");
//                    LogUtil.d(TAG, "팝업 띄우기 위한 핸들러 동작 시작(서버 전송 실패시에도 보여줘야 함)");
//                    Message msg = errHandler.obtainMessage(0);
//                    errHandler.sendMessage(msg);
                }
            } catch (JSONException e) {
                e.printStackTrace();
            }
        }
    }
}
